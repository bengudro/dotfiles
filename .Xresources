! --------------------------------------------------------------------------
! ### Creating ~/.Xresources
! Append commented list of all rxvt resources + helpful descriptions to
! your ~/.Xresources file
! [wiki.archlinux.org/index.php/rxvt-unicode#Creating_.7E.2F.Xresources]
!
! Compile xft: Attempt to find a visual with the given bit depth;
! option -depth.
!!URxvt*depth: bitdepth

! Compile xft: Turn on/off double-buffering for xft (default enabled).  On
! some card/driver combination enabling it slightly decreases performance,
! on most it greatly helps it.  The slowdown is small, so it should normally
! be enabled.
!!URxvt*buffered: boolean

! Create the window with the specified X window geometry [default 80x24];
! option -geometry.
!!URxvt*geometry: geom

! Use the specified colour as the windows background colour [default White];
! option -bg.
!!URxvt*background: colour

! Use the specified colour as the windows foreground colour [default Black];
! option -fg.
!!URxvt*foreground: colour

! Use the specified colour for the colour value n, where 0-7 corresponds to
! low-intensity (normal) colours and 8-15 corresponds to high-intensity
! (bold = bright foreground, blink = bright background) colours.  The
! canonical names are as follows: 0=black, 1=red, 2=green, 3=yellow, 4=blue,
! 5=magenta, 6=cyan, 7=white, but the actual colour names used are listed in
! the COLOURS AND GRAPHICS section.
!
! Colours higher than 15 cannot be set using resources (yet), but can be
! changed using an escape command (see urxvt(7)).
!
! Colours 16-79 form a standard 4x4x4 colour cube (the same as xterm with 88
! colour support).  Colours 80-87 are evenly spaces grey steps.
!!URxvt*colorn: colour

! Use the specified colour to display bold or italic characters when the
! foreground colour is the default.  If font styles are not available
! (Compile styles) and this option is unset, reverse video is used instead.
!!URxvt*colorBD: colour
!!URxvt*colorIT: colour

! Use the specified colour to display underlined characters when the
! foreground colour is the default.
!!URxvt*colorUL: colour

! If set, use the specified colour as the colour for the underline itself.
! If unset, use the foreground colour.
!!URxvt*underlineColor: colour

! If set, use the specified colour as the background for highlighted
! characters.  If unset, use reverse video.
!!URxvt*highlightColor: colour

! If set and highlightColor is set, use the specified colour as the
! foreground for highlighted characters.
!!URxvt*highlightTextColor: colour

! Use the specified colour for the cursor.  The default is to use the
! foreground colour; option -cr.
!!URxvt*cursorColor: colour

! Use the specified colour for the colour of the cursor text.  For this to
! take effect, cursorColor must also be specified.  The default is to use
! the background colour.
!!URxvt*cursorColor2: colour

! True: simulate reverse video by foreground and background colours;
! option -rv.
! False: regular screen colours [default]; option +rv.  See note in COLOURS
! AND GRAPHICS section.
!!URxvt*reverseVideo: boolean

! True: specify that jump scrolling should be used.  When receiving lots of
! lines, urxvt will only scroll once a whole screen height of lines has been
! read, resulting in fewer updates while still displaying every received
! line; option -j.
!
! False: specify that smooth scrolling should be used. urxvt will force a
! screen refresh on each new line it received; option +j.
!!URxvt*jumpScroll: boolean

! True: (the default) specify that skip scrolling should be used.  When
! receiving lots of lines, urxvt will only scroll once in a while (around 60
! times per second), resulting in far fewer updates.  This can result in
! urxvt not ever displaying some of the lines it receives; option -ss.
!
! False: specify that everything is to be displayed, even if the refresh is
! too fast for the human eye to read anything (or the monitor to display
! anything); option +ss.
!!URxvt*skipScroll: boolean

! Fade the text by the given percentage when focus is lost; option -fade.
!!URxvt*fading: number

! Fade to this colour, when fading is used (see fading:).  The default
! colour is black; option -fadecolor.
!!URxvt*fadeColor: colour

! Set the application icon pixmap; option -icon.
!!URxvt*iconFile: file

! Use the specified colour for the scrollbar [default #B2B2B2].
!!URxvt*scrollColor: colour

! Use the specified colour for the scrollbars trough area [default #969696].
! Only relevant for rxvt (non XTerm/NeXT) scrollbar.
!!URxvt*troughColor: colour

! The colour of the border around the text area and between the scrollbar
! and the text.
!!URxvt*borderColor: colour

! Select the fonts to be used.  This is a comma separated list of font names
! that are checked in order when trying to find glyphs for characters.  The
! first font defines the cell size for characters; other fonts might be
! smaller, but not (in general) larger.  A (hopefully) reasonable default
! font list is always appended to it; option -fn.
!
! Each font can either be a standard X11 core font (XLFD) name, with
! optional prefix "x:" or a Xft font (Compile xft), prefixed with "xft:".
!
! In addition, each font can be prefixed with additional hints and
! specifications enclosed in square brackets ("[]").  The only available
! hint currently is "codeset=codeset-name", and this is only used for Xft
! fonts.
!
! For example, this font resource
!
!    URxvt.font: 9x15bold,\
!    -misc-fixed-bold-r-normal--15-140-75-75-c-90-iso10646-1, \
!    -misc-fixed-medium-r-normal--15-140-75-75-c-90-iso10646-1, \
!    [codeset=JISX0208]xft:Kochi Gothic:antialias=false,\
!    xft:Code2000:antialias=false
!
! specifies five fonts to be used.  The first one is "9x15bold" (actually
! the iso8859-1 version of the second font), which is the base font (because
! it is named first) and thus defines the character cell grid to be 9 pixels
! wide and 15 pixels high.
!
! The second font is just used to add additional unicode characters not in
! the base font, likewise the third, which is unfortunately non-bold, but
! the bold version of the font does contain fewer characters, so this is a
! useful supplement.
!
! The third font is an Xft font with aliasing turned off, and the characters
! are limited to the JIS 0208 codeset (i.e. japanese kanji).  The font
! contains other characters, but we are not interested in them.
!
! The last font is a useful catch-all font that supplies most of the
! remaining unicode characters.
!!URxvt*font: fontlist

! The font list to use for displaying bold, italic or bold italic
! characters, respectively.
!
! If specified and non-empty, then the syntax is the same as for the
! font-resource, and the given font list will be used as is, which makes it
! possible to substitute completely different font styles for bold and
! italic.
!
! If unset (the default), a suitable font list will be synthesized by
! "morphing" the normal text font list into the desired shape.  If that is
! not possible, replacement fonts of the desired shape will be tried.
!
! If set, but empty, then this specific style is disabled and the normal
! text font will being used for the given style.
!!URxvt*boldFont: fontlist
!!URxvt*italicFont: fontlist
!!URxvt*boldItalicFont: fontlist

! When font styles are not enabled, or this option is enabled (True, option
! -is, the default), bold/blink font styles imply high intensity
! foreground/background colours.  Disabling this option (False, option +is)
! disables this behaviour, the high intensity colours are not reachable.
!!URxvt*intensityStyles: boolean

! Set window title string, the default title is the command-line specified
! after the -e option, if any, otherwise the application name; option
! -title.
!!URxvt*title: string

! Set the name used to label the windows icon or displayed in an icon
! manager window, it also sets the windows title unless it is explicitly
! set; option -n.
!!URxvt*iconName: string

! True: de-iconify (map) on receipt of a bell character.
! False: no de-iconify (map) on receipt of a bell character [default].
!!URxvt*mapAlert: boolean

! True: set the urgency hint for the wm on receipt of a bell character.
! False: do not set the urgency hint [default].
!!URxvt*urgentOnBell: boolean

! True: use visual bell on receipt of a bell character; option -vb.
! False: no visual bell [default]; option +vb.
!!URxvt*visualBell: boolean

! True: start as a login shell by prepending a - to argv[0] of the shell;
! option -ls.
! False: start as a normal sub-shell [default]; option +ls.
!!URxvt*loginShell: boolean

! True: inhibit writing record into the system log file utmp; option -ut.
! False: write record into the system log file utmp [default]; option +ut.
!!URxvt*utmpInhibit: boolean

! Specify a command pipe for vt100 printer [default lpr(1)].  Use Print to
! initiate a screen dump to the printer and Ctrl-Print or Shift-Print to
! include the scrollback as well.
!
! The string will be interpreted as if typed into the shell as-is.
!
! Example:
!
!    URxvt.print-pipe: cat > $(TMPDIR=$HOME mktemp urxvt.XXXXXX)
!
! This creates a new file in your home directory with the screen contents
! every time you hit "Print".
!!URxvt*print-pipe: string

! Set scrollbar style to rxvt, plain, next or xterm.  plain is the authors
! favourite.
!!URxvt*scrollstyle: mode

! Set the scrollbar width in pixels.
!!URxvt*thickness: number

! True: enable the scrollbar [default]; option -sb.
! False: disable the scrollbar; option +sb.
!!URxvt*scrollBar: boolean

! True: place the scrollbar on the right of the window; option -sr.
! False: place the scrollbar on the left of the window; option +sr.
!!URxvt*scrollBar_right: boolean

! True: display an rxvt scrollbar without a trough; option -st.
! False: display an rxvt scrollbar with a trough; option +st.
!!URxvt*scrollBar_floating: boolean

! Align the top, bottom or centre [default] of the scrollbar thumb with the
! pointer on middle button press/drag.
!!URxvt*scrollBar_align: mode

! True: scroll to bottom when tty receives output; option -si.
! False: do not scroll to bottom when tty receives output; option +si.
!!URxvt*scrollTtyOutput: boolean

! True: scroll with scrollback buffer when tty receives new lines (i.e. try
! to show the same lines) and scrollTtyOutput is False; option -sw.
! False: do not scroll with scrollback buffer when tty receives new lines;
! option +sw.
!!URxvt*scrollWithBuffer: boolean

! True: scroll to bottom when a non-special key is pressed.  Special keys
! are those which are intercepted by rxvt-unicode for special handling and
! are not passed onto the shell; option -sk.
! False: do not scroll to bottom when a non-special key is pressed;
! option +sk.
!!URxvt*scrollTtyKeypress: boolean

! Save number lines in the scrollback buffer [default 64].  This resource is
! limited on most machines to 65535; option -sl.
!!URxvt*saveLines: number

! Internal border of number pixels.  This resource is limited to 100; option
! -b.
!!URxvt*internalBorder: number

! External border of number pixels.  This resource is limited to 100; option
! -w, -bw, -borderwidth.
!!URxvt*externalBorder: number

! Set MWM hints to request a borderless window, i.e. if honoured by the WM,
! the rxvt-unicode window will not have window decorations; option -bl.
!!URxvt*borderLess: boolean

! Compile frills: Disable the usage of the built-in block graphics/line
! drawing characters and just rely on what the specified fonts provide.  Use
! this if you have a good font and want to use its block graphic glyphs;
! option -sbg.
!!URxvt*skipBuiltinGlyphs: boolean

! Specifies the terminal type name to be set in the TERM environment
! variable; option -tn.
!!URxvt*termName: termname

! Specifies number of lines (pixel height) to insert between each row of the
! display [default 0]; option -lsp.
!!URxvt*lineSpace: number

! True: handle Meta (Alt) + keypress to set the 8th bit.
! False: handle Meta (Alt) + keypress as an escape prefix [default].
!!URxvt*meta8: boolean

! True: the mouse wheel scrolls a page full.
! False: the mouse wheel scrolls five lines [default].
!!URxvt*mouseWheelScrollPage: boolean

! True: store tabs as wide characters.
! False: interpret tabs as cursor movement only; option "-ptab".
!!URxvt*pastableTabs: boolean

! True: blink the cursor.
! False: do not blink the cursor [default]; option -bc.
!!URxvt*cursorBlink: boolean

! True: Make the cursor underlined.
! False: Make the cursor a box [default]; option -uc.
!!URxvt*cursorUnderline: boolean

! True: blank the pointer when a key is pressed or after a set number of
! seconds of inactivity.
! False: the pointer is always visible [default].
!!URxvt*pointerBlank: boolean

! Mouse pointer foreground colour.
!!URxvt*pointerColor: colour

! Mouse pointer background colour.
!!URxvt*pointerColor2: colour

! Specifies number of seconds before blanking the pointer [default 2].  Use
! a large number (e.g. 987654321) to effectively disable the timeout.
!!URxvt*pointerBlankDelay: number

! The string to send when the backspace key is pressed.  If set to DEC or
! unset it will send Delete (code 127) or, with control, Backspace (code 8)
! - which can be reversed with the appropriate DEC private mode escape
! sequence.
!!URxvt*backspacekey: string

! The string to send when the delete key (not the keypad delete key) is
! pressed.  If unset it will send the sequence traditionally associated with
! the Execute key.
!!URxvt*deletekey: string

! The characters used as delimiters for double-click word selection
! (whitespace delimiting is added automatically if resource is given).
!
! When the perl selection extension is in use (the default if compiled in,
! see the urxvtperl(3) manpage), a suitable regex using these characters
! will be created (if the resource exists, otherwise, no regex will be
! created).  In this mode, characters outside ISO-8859-1 can be used.
!
! When the selection extension is not used, only ISO-8859-1 characters can
! be used.  If not specified, the built-in default is used:
!
! BACKSLASH `"'&()*,;<=>?@[]^{|}
!!URxvt*cutchars: string

! OverTheSpot, OffTheSpot, Root; option -pt.
!!URxvt*preeditType: style

! name of inputMethod to use; option -im.
!!URxvt*inputMethod: name

! The locale to use for opening the IM.  You can use an "LC_CTYPE" of e.g.
! "de_DE.UTF-8" for normal text processing but "ja_JP.EUC-JP" for the input
! extension to be able to input japanese characters while staying in another
! locale; option -imlocale.
!!URxvt*imLocale: name

! Specify the font-set used for XIM styles "OverTheSpot" or "OffTheSpot".
! It must be a standard X font set (XLFD patterns separated by commas), i.e.
! its not in the same format as the other font lists used in urxvt.  The
! default will be set-up to chose *any* suitable found found, preferably one
! or two pixels differing in size to the base font.  option -imfont.
!!URxvt*imFont: fontset

! Change the meaning of triple-click selection with the left mouse button.
! Instead of selecting a full line it will extend the selection to the end
! of the logical line only; option -tcw.
!!URxvt*tripleclickwords: boolean

! Enables "insecure" mode.  Rxvt-unicode offers some escape sequences that
! echo arbitrary strings like the icon name or the locale.  This could be
! abused if somebody gets 8-bit-clean access to your display, whether
! through a mail client displaying mail bodies unfiltered or through
! write(1) or any other means.  Therefore, these sequences are disabled by
! default. (Note that many other terminals, including xterm, have these
! sequences enabled by default, which doesn't make it safer, though).
!
! You can enable them by setting this boolean resource or specifying
! -insecure as an option.  At the moment, this enables display-answer,
! locale, findfont, icon label and window title requests.
!!URxvt*insecure: boolean

! Set the key to be interpreted as the Meta key to: alt, meta, hyper, super,
! mod1, mod2, mod3, mod4, mod5; option -mod.
!!URxvt*modifier: modifier

! Specify the reply rxvt-unicode sends to the shell when an ENQ (control-E)
! character is passed through.  It may contain escape values as described in
! the entry on keysym following.
!!URxvt*answerbackString: string

! Turn on/off secondary screen (default enabled).
!!URxvt*secondaryScreen: boolean

! Turn on/off secondary screen scroll (default enabled).  If this option is
! enabled, scrolls on the secondary screen will change the scrollback buffer
! and, when secondaryScreen is off, switching to/from the secondary screen
! will instead scroll the screen up.
!!URxvt*secondaryScroll: boolean

! Turn on/off hold window after exit support.  If enabled, urxvt will not
! immediately destroy its window when the program executed within it exits.
! Instead, it will wait till it is being killed or closed by the user.
!!URxvt*hold: boolean

! Sets the working directory for the shell (or the command specified via
! -e).  The path must be an absolute path and it must exist for urxvt to
! start.  If it isnt specified then the current working directory will be
! used; option -cd.
!!URxvt*chdir: path

! Compile frills: Associate string with keysym sym.  The intervening
! resource name keysym. cannot be omitted.
!
! The format of sym is "(modifiers-)key", where modifiers can be any
! combination of ISOLevel3, AppKeypad, Control, NumLock, Shift, Meta, Lock,
! Mod1, Mod2, Mod3, Mod4, Mod5, and the abbreviated I, K, C, N, S, M, A, L,
! 1, 2, 3, 4, 5.
!
! The NumLock, Meta and ISOLevel3 modifiers are usually aliased to whatever
! modifier the NumLock key, Meta/Alt keys or ISO Level3 Shift/AltGr keys are
! being mapped.  AppKeypad is a synthetic modifier mapped to the current
! application keymap mode state.
!
! The spellings of key can be obtained by using xev(1) command or searching
! keysym macros from /usr/X11R6/include/X11/keysymdef.h and omitting the
! prefix XK_.  Alternatively you can specify key by its hex keysym value
! (0x0000 - 0xFFFF).  Note that the lookup of syms is not performed in an
! exact manner; however, the closest match is assured.
!
! string may contain escape values ("\n": newline, "\000": octal number),
! see RESOURCES in "man 7 X" for further details.
!
! You can define a range of keysyms in one shot by loading the "keysym-list"
! perl extension and providing a string with pattern
! list/PREFIX/MIDDLE/SUFFIX, where the delimiter `/' should be a character
! not used by the strings.
!
! Its usage can be demonstrated by an example:
!
!   URxvt.keysym.M-C-0x61:    list|\033<|abc|>
!
! The above line is equivalent to the following three lines:
!
!   URxvt.keysym.Meta-Control-0x61:    \033<a>
!   URxvt.keysym.Meta-Control-0x62:    \033<b>
!   URxvt.keysym.Meta-Control-0x63:    \033<c>
!
! If string takes the form of "command:STRING", the specified STRING is
! interpreted and executed as urxvt's control sequence.  For example the
! following means "change the current locale to "zh_CN.GBK" when
! Control-Meta-c is being pressed":
!
!   URxvt.keysym.M-C-c: command:\033]701;zh_CN.GBK\007
!
! If string takes the form "perl:STRING", then the specified STRING is
! passed to the "on_user_command" perl handler.  See the urxvtperl(3)
! manpage.  For example, the selection extension (activated via "urxvt -pe
! selection") listens for "selection:rot13" events:
!
!   URxvt.keysym.M-C-c: perl:selection:rot13
!
! Due the the large number of modifier combinations, a defined key mapping
! will match if at least the specified identifiers are being set, and no
! other key mappings with those and more bits are being defined.  That means
! that defining a key map for "a" will automatically provide definitions for
! "Meta-a", "Shift-a" and so on, unless some of those are defined mappings
! themselves.
!
! Unfortunately, this will override built-in key mappings.  For example if
! you overwrite the "Insert" key you will disable urxvt's "Shift-Insert"
! mapping.  To re-enable that, you can poke "holes" into the user-defined
! keymap using the "builtin:" replacement:
!
!   URxvt.keysym.Insert: <my insert key sequence>
!   URxvt.keysym.S-Insert: builtin:
!
! The first line defines a mapping for "Insert" and any combination of
! modifiers.  The second line re-establishes the default mapping for
! "Shift-Insert".
!
! The following example will map Control-Meta-1 and Control-Meta-2 to the
! fonts "suxuseuro" and "9x15bold", so you can have some limited
! font-switching at runtime:
!
!   URxvt.keysym.M-C-1: command:\033]50;suxuseuro\007
!   URxvt.keysym.M-C-2: command:\033]50;9x15bold\007
!
! Other things are possible, e.g. resizing (see urxvt(7) for more info):
!
!   URxvt.keysym.M-C-3: command:\033[8;25;80t
!   URxvt.keysym.M-C-4: command:\033[8;48;110t
!!URxvt*keysym.sym: string

! Comma-separated list(s) of perl extension scripts (default: "default") to
! use in this terminal instance; option -pe.
!
! Extension names can be prefixed with a "-" sign to prohibit using them.
! This can be useful to selectively disable some extensions loaded by
! default, or specified via the "perl-ext-common" resource.  For example,
! "default,-selection" will use all the default extension except
! "selection".
!
! Extension names can also be followed by an argument in angle brackets
! (e.g. "searchable-scrollback<M-s>", which binds the hotkey for searchable
! scrollback to Alt/Meta-s).  Mentioning the same extension multiple times
! with different arguments will pass multiple arguments to the extension.
!
! Each extension is looked up in the library directories, loaded if
! necessary, and bound to the current terminal instance.
!
! If both of these resources are the empty string, then the perl interpreter
! will not be initialized.  The idea behind two options is that
! perl-ext-common will be used for extensions that should be available to
! all instances, while perl-ext is used for specific instances.
!!URxvt*perl-ext-common: string URxvt*perl-ext: string

! Perl code to be evaluated when all extensions have been registered.  See
! the urxvtperl(3) manpage.
!!URxvt*perl-eval: string

! Colon-separated list of additional directories that hold extension
! scripts.  When looking for perl extensions, urxvt will first look in these
! directories, then in $URXVT_PERL_LIB, $HOME/.urxvt/ext and lastly in
! /usr/lib/urxvt/perl/.
!
! See the urxvtperl(3) manpage.
!!URxvt*perl-lib: path

! Additional selection patterns, see the urxvtperl(3) manpage for details.
!!URxvt*selection.pattern-idx: perl-regex

! Selection auto-transform patterns, see the urxvtperl(3) manpage for
! details.
!!URxvt*selection-autotransform.idx: perl-transform

! Sets the hotkey that starts the incremental scrollback buffer search
! (default: "M-s").
!!URxvt*searchable-scrollback: keysym

! Specifies the program to be started with a URL argument.  Used by the
! "selection-popup" and "matcher" perl extensions.
!!URxvt*url-launcher: string

! Compile frills: Sets the WM_TRANSIENT_FOR property to the given window id.
!!URxvt*transient-for: windowid

! Compile frills: Sets override-redirect for the terminal window, making it
! almost invisible to window managers; option -override-redirect.
!!URxvt*override-redirect: boolean

! Turn on/off ISO 14755 (default enabled).
!!URxvt*iso14755: boolean

! Turn on/off ISO 14755 5.2 mode (default enabled).
!!URxvt*iso14755_52: boolean
! --------------------------------------------------------------------------
